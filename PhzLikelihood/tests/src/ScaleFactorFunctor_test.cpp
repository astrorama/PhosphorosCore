/**
 * @file tests/src/ScaleFactorFunctor_test.cpp
 * @date dec 15, 2014
 * @author Florian Dubath
 */

#include <boost/test/unit_test.hpp>
#include "ElementsKernel/EnableGMock.h"

#include <vector>
#include <memory>
#include <tuple>

#include "PhzLikelihood/ScaleFactorFunctor.h"

using namespace std;
using namespace Euclid;
using namespace Euclid::PhzLikelihood;
using namespace Euclid::PhzLikelihood::_Impl;
using namespace testing;

class MockAdder {
public:
  virtual ~MockAdder() = default;
  MOCK_METHOD4(FunctorCall, void(const SourceCatalog::FluxErrorPair& source,
                                 const SourceCatalog::FluxErrorPair& model,
                                 double& numerator, double& denominator));
};
ACTION_P3(IncreaseNumeratorDenominator, num_add, den_add, i) {
  arg2 += num_add[i];
  arg3 += den_add[i];
}
std::unique_ptr<MockAdder> mock_adder_singleton {};

class TestAdder {
public:
  void operator()(const SourceCatalog::FluxErrorPair& source,
                  const SourceCatalog::FluxErrorPair& model,
                  double& numerator, double& denominator) {
    if (mock_adder_singleton == nullptr) {
      BOOST_FAIL("TestAdder was called when the MockAdder was not set");
    }
    mock_adder_singleton->FunctorCall(source, model, numerator, denominator);
  }
};

struct ScaleFactorFunctor_Fixture {
  
  double close_tolerance = 1E-8;

  vector<tuple<double, double, double>> adder_test_data {
    //         Source flux       Source error      Model flux
    make_tuple(3.71292622573,    4.11600779569,    0.570940144212),
    make_tuple(3.70582589942,    3.49064665704,    2.89858384344),
    make_tuple(4.0147884556,     2.63537609564,    4.89494301006),
    make_tuple(1.77645197921,    1.33723453801,    2.10179219097),
    make_tuple(4.6477626139,     4.77023052626,    0.948245362635),
    make_tuple(4.44554804542,    2.09897876734,    2.03351256316),
    make_tuple(0.178307734117,   4.18381973883,    1.97795621925),
    make_tuple(0.151411155456,   0.24084442573,    2.06515543333),
    make_tuple(2.3338551861,     0.93800477408,    0.447772954241),
    make_tuple(0.306777971416,   1.25294565244,    2.63560055047),
    make_tuple(4.48942687094,    0.765759075768,   0.39370741919),
    make_tuple(4.10472362825,    1.84731090828,    2.78106015733),
    make_tuple(3.70011858763,    4.71842128381,    0.899190910251),
    make_tuple(0.416466041171,   4.22905627592,    0.36828091503),
    make_tuple(3.63329683445,    1.98950000144,    1.94564070849),
    make_tuple(3.002936969,      1.85504137742,    4.28300221998),
    make_tuple(0.359333604521,   0.130416771914,   0.0582179843787),
    make_tuple(1.73632794738,    3.28524040772,    0.415151443269),
    make_tuple(1.90920539265,    4.7583999394,     3.48242454559),
    make_tuple(0.824710829753,   1.16828168314,    2.1201546816),
    make_tuple(0.100879364648,   2.09459990043,    2.18824991789),
    make_tuple(1.0647660092,     4.65076660705,    3.6126340591),
    make_tuple(1.54200882552,    4.9040856361,     2.84622198569),
    make_tuple(1.0506212637,     3.50883904432,    1.71964445196),
    make_tuple(2.97811353391,    3.74954877011,    1.82082667679),
    make_tuple(2.43631607873,    1.81559476137,    4.89368453654),
    make_tuple(0.905209721718,   4.17690122109,    2.48172333947),
    make_tuple(2.64683114237,    4.56041520761,    1.50990693936),
    make_tuple(0.418699040151,   0.310176928193,   4.15681289324),
    make_tuple(2.10171005225,    4.77948347355,    0.238860296179),
    make_tuple(1.11936054715,    1.76098623244,    0.928656545124),
    make_tuple(2.512833899,      3.9028190095,     1.52855367435),
    make_tuple(1.8127294359,     2.18350965925,    4.91909847365),
    make_tuple(3.67118917415,    0.725428954222,   0.710903250361),
    make_tuple(4.3497686606,     0.0831794157743,  3.56530469682),
    make_tuple(3.94543203521,    0.665486404958,   4.3467482606),
    make_tuple(1.65912601733,    1.49046147861,    3.63520699711),
    make_tuple(0.418150890868,   3.22765335397,    0.897775360919),
    make_tuple(1.73617366578,    1.00285307538,    4.79732622255),
    make_tuple(0.493614350635,   2.1555374704,     0.890005495177),
    make_tuple(4.65002254176,    3.06363262787,    3.55556913711),
    make_tuple(0.00637515125746, 2.41826907096,    4.69939793547),
    make_tuple(2.95040682784,    2.50765253667,    2.61737893063),
    make_tuple(2.15746465583,    1.84854104154,    0.280504036269),
    make_tuple(3.78802306957,    2.3614883303,     2.33272295284),
    make_tuple(1.44942313452,    3.84717103869,    3.61956725764),
    make_tuple(2.75516667065,    0.402746513885,   1.90302747093),
    make_tuple(2.17834861757,    1.02993739009,    3.95986540975),
    make_tuple(4.39725885284,    3.31439446432,    3.7628113755),
    make_tuple(2.74467097059,    4.11868563983,    3.7456230605),
    make_tuple(0.996016196524,   4.36587535399,    1.97618956944),
    make_tuple(4.7071681377,     3.66841430621,    1.91973814607),
    make_tuple(0.806499848917,   0.31802948198,    2.23844929839),
    make_tuple(1.63061019803,    2.41813033762,    2.69340377699),
    make_tuple(0.354881240136,   4.72075898372,    2.29286258753),
    make_tuple(3.02268461207,    3.96906245639,    1.3575404376),
    make_tuple(1.90532605114,    0.674694997317,   2.46793134288),
    make_tuple(0.733850844291,   3.02034547267,    4.36405990459),
    make_tuple(3.47498611512,    1.5689989998,     4.57185385187),
    make_tuple(2.84128645919,    2.00665646014,    1.97420810775),
    make_tuple(2.29157625231,    3.33134872987,    2.99986019679),
    make_tuple(2.70734967742,    0.00761827148459, 1.73721965218),
    make_tuple(2.9104790057,     3.66423409466,    1.72730677827),
    make_tuple(4.85560154988,    3.08037334973,    4.92078659021),
    make_tuple(4.38895897249,    2.29737243199,    0.322915125006),
    make_tuple(4.12464813592,    4.05957434286,    3.7002665824),
    make_tuple(4.4731396915,     3.14109357265,    0.529603586662),
    make_tuple(4.07135156626,    0.337942033116,   4.98501090122),
    make_tuple(0.433185147023,   3.86329811443,    4.8654724317),
    make_tuple(2.88944925229,    2.55418022,       1.35631722865),
    make_tuple(0.451149076996,   4.06409641163,    0.0997366254996),
    make_tuple(0.130850463231,   3.44598561739,    4.68835452855),
    make_tuple(1.42925629546,    3.08735875975,    2.95017859163),
    make_tuple(2.49901585341,    3.76156747715,    1.26311898388),
    make_tuple(3.45393138715,    2.72447105548,    2.45754576464),
    make_tuple(4.07922255231,    1.22554417099,    1.52468349612),
    make_tuple(2.89616655565,    0.096610842851,   1.61090866503),
    make_tuple(1.30537756835,    2.51798788749,    2.1040004443),
    make_tuple(3.64793557594,    3.04055326514,    0.822728067414),
    make_tuple(4.35089774635,    3.92381974647,    0.556007762049),
    make_tuple(0.681699542772,   0.665216341341,   0.897404621604),
    make_tuple(4.4584658119,     4.01262835533,    4.9626184548),
    make_tuple(2.94238393974,    1.20164200623,    0.194422168179),
    make_tuple(4.47037087311,    2.88491638735,    3.61743614848),
    make_tuple(4.95028014219,    3.70023238346,    2.32766167793),
    make_tuple(1.11218247687,    3.39019988124,    4.47543773665),
    make_tuple(2.60340596051,    3.14337118313,    3.68223725443),
    make_tuple(0.933000807124,   3.85969720988,    3.07182538157),
    make_tuple(4.7527024575,     0.639162978967,   1.05753261779),
    make_tuple(4.49940518395,    1.14842837103,    2.27691466148),
    make_tuple(3.18292648586,    2.30460836355,    4.33804083698),
    make_tuple(1.98261787225,    0.987431645924,   4.18960241572),
    make_tuple(3.82658820192,    3.25993438587,    1.47502968523),
    make_tuple(1.21861737516,    0.469383823331,   3.8926864314),
    make_tuple(4.74033106723,    4.32765626614,    4.4000134955),
    make_tuple(3.62626000765,    3.16144713861,    2.39302514307),
    make_tuple(4.97657708259,    1.04176239132,    1.91060359982),
    make_tuple(3.1019775713,     2.30649735637,    4.75888936014),
    make_tuple(4.56071012518,    3.96027528615,    0.330316330648),
    make_tuple(0.645595476254,   1.20127699287,    3.6266527895)
  }; // end of adder_test_data
  
  vector<tuple<double, double, double, double>> normal_adder_data {
    //         Numerator before  Numerator after Denominator befo Denominator after
    make_tuple(3.83167183951,    3.95679984531,  1.71259373755,   1.73183478823),
    make_tuple(4.06965659025,    4.95123125518,  0.0480572451338, 0.737598024952),
    make_tuple(3.6388105306,     6.46841088944,  4.32595087601,   7.77587922242),
    make_tuple(4.18789080655,    6.27587918132,  0.889511237872,  3.35989473951),
    make_tuple(4.16919229061,    4.36287280557,  0.764333370633,  0.80384843743),
    make_tuple(2.62045464728,    4.67235410779,  4.17147804926,   5.1100717364),
    make_tuple(3.45228749562,    3.47243591243,  3.94463572824,   4.16814081926),
    make_tuple(1.90751026008,    7.29811414106,  1.5792501855,    75.103785813),
    make_tuple(3.71294077193,    4.90068154621,  4.88381778252,   5.11169747212),
    make_tuple(2.02743193755,    2.54246996244,  2.32805685644,   6.75286772419),
    make_tuple(3.93826915701,    6.95252558012,  2.55779782625,   2.82213783027),
    make_tuple(0.262157328392,   3.60729745633,  2.47086244741,   4.73728444631),
    make_tuple(3.15642928585,    3.30587178541,  2.96777096811,   3.00408800337),
    make_tuple(0.127450013852,   0.136025759261, 1.66980271476,   1.67738624632),
    make_tuple(3.40691760564,    5.19289368271,  0.171929196082,  1.12832442561),
    make_tuple(1.10414579903,    4.84169840202,  3.12252406193,   8.45328733176),
    make_tuple(0.840410506096,   2.07036234599,  2.80633449137,   3.0056070228),
    make_tuple(2.03477631055,    2.10156516519,  0.931401676224,  0.947370715621),
    make_tuple(2.20502859735,    2.49866675125,  2.02942846697,   2.565029675),
    make_tuple(1.27033236567,    2.55140604816,  3.70081064717,   6.99417635476),
    make_tuple(0.072118850774,   0.122433807333, 2.32343227674,   3.41485171562),
    make_tuple(4.21934133859,    4.39718117884,  1.33610800157,   1.93949903622),
    make_tuple(1.78663858364,    1.9691287797,   3.72498884303,   4.06182712801),
    make_tuple(1.62342343315,    1.77016662298,  3.99240965225,   4.2325971689),
    make_tuple(4.82053217605,    5.20623413462,  1.50720713913,   1.74302636075),
    make_tuple(0.377718977794,   3.99457948309,  3.59267141798,   10.8576459753),
    make_tuple(2.75104127733,    2.87980519002,  1.0247235122,    1.37774270736),
    make_tuple(4.20540115555,    4.39756321586,  3.49666230381,   3.60628275662),
    make_tuple(4.91605463534,    23.0062584711,  1.01605152823,   180.614248168),
    make_tuple(0.88689788445,    0.908874197827, 0.460685334367,  0.463182952303),
    make_tuple(3.0760841793,     3.41129127131,  4.60989633513,   4.88799463041),
    make_tuple(0.16557716927,    0.417743821208, 3.37721208728,   3.5306047419),
    make_tuple(1.06471904612,    2.9350061047,   1.65220348427,   6.72749273205),
    make_tuple(4.65237800793,    9.61175922109,  1.16375920855,   2.12411294054),
    make_tuple(0.482120060496,   2241.94256788,  4.44984267199,   1841.67156316),
    make_tuple(2.50510426548,    41.2291460361,  0.117713281802,  42.7806357977),
    make_tuple(4.09507297628,    6.81005530517,  4.15860992008,   10.1072374842),
    make_tuple(0.609156462041,   0.645191662047, 4.42727444411,   4.50464248373),
    make_tuple(4.56692975028,    12.8485973471,  1.13903760506,   24.0226130859),
    make_tuple(3.51825172274,    3.61280341626,  3.00620546461,   3.17668577318),
    make_tuple(4.39427453321,    6.15580765573,  1.31762683966,   2.66455639713),
    make_tuple(4.4044662061,     4.40958919567,  0.809635094367,  4.58601084936),
    make_tuple(0.188874020996,   1.41691762239,  2.73425756388,   3.82368544136),
    make_tuple(0.357792509453,   0.534894976106, 2.75198374369,   2.77500982506),
    make_tuple(3.02816122624,    4.61270474112,  4.36824138531,   5.34402768836),
    make_tuple(2.48525963965,    2.83972095961,  1.94180368574,   2.82698107616),
    make_tuple(4.4173210216,     36.7416377726,  4.28630900043,   26.6131117348),
    make_tuple(4.64140400941,    12.7731941106,  1.99870939273,   16.7809137108),
    make_tuple(1.05714107727,    2.56335303231,  1.61464435349,   2.90353629004),
    make_tuple(2.12292810551,    2.72896221464,  4.07223312424,   4.89928137845),
    make_tuple(3.66233455008,    3.76559935728,  3.04279204524,   3.24767910993),
    make_tuple(4.17744398073,    4.84894232949,  2.24295835,      2.51681748514),
    make_tuple(0.993752733539,   18.8428718827,  2.53613897974,   52.0765676482),
    make_tuple(3.15028567386,    3.90137606765,  2.85818729971,   4.09882084043),
    make_tuple(4.47947178263,    4.51598393319,  0.670915263721,  0.906817685539),
    make_tuple(4.52135459982,    4.78183181746,  1.69810350042,   1.81508836699),
    make_tuple(4.48984930384,    14.8195419402,  4.8348729495,    18.2147205636),
    make_tuple(4.03128413561,    4.38234729686,  3.43131670859,   5.5190170607),
    make_tuple(4.29707983224,    10.7506506342,  4.06036351106,   12.550982337),
    make_tuple(1.8051803659,     3.19821494698,  0.749522704636,  1.71744347005),
    make_tuple(2.67275168755,    3.2921858215,   1.68361563713,   2.49450543453),
    make_tuple(1.4428875309,     81038.9729408,  2.32341125931,   52001.5132266),
    make_tuple(4.90450580538,    5.27893312194,  1.06623088871,   1.2884454591),
    make_tuple(0.700489850345,   3.21857758209,  2.19683093118,   4.74872325926),
    make_tuple(2.83161180226,    3.10013826927,  1.9944593646,    2.01421604453),
    make_tuple(1.47424861076,    2.4003508223,   3.68161766749,   4.5124340068),
    make_tuple(1.44589495023,    1.68600018591,  0.774416046783,  0.802843639651),
    make_tuple(0.304243442915,   178.017691448,  4.48925387479,   222.083696698),
    make_tuple(2.72150733843,    2.86272276073,  0.0714784083151, 1.65758944849),
    make_tuple(0.605930675136,   1.20665231253,  2.48813031074,   2.7701110743),
    make_tuple(1.47980528947,    1.48252953809,  2.73015997362,   2.7307622299),
    make_tuple(1.4082776243,     1.45993933566,  1.3097192552,    3.16075143669),
    make_tuple(1.44714888829,    1.8895174182,   2.68298427731,   3.59609284343),
    make_tuple(2.32392321802,    2.54701088406,  2.86470832194,   2.97746721688),
    make_tuple(1.86557784269,    3.00911669172,  2.80987809894,   3.62353035202),
    make_tuple(1.45298189187,    5.59392402857,  4.04409123619,   5.59184354763),
    make_tuple(4.82544970052,    504.678917786,  4.40865136805,   282.437648497),
    make_tuple(4.74165974873,    5.17484603503,  4.06022405723,   4.75843135061),
    make_tuple(1.13829772686,    1.46293489528,  4.40099638233,   4.47421261782),
    make_tuple(0.767818491625,   0.924942168808, 0.426464920194,  0.446543991046),
    make_tuple(2.038739954,      3.42120922221,  1.59174879662,   3.41166245752),
    make_tuple(3.36230820052,    4.7364718355,   3.17505358232,   4.70460435215),
    make_tuple(3.5990049451,     3.99518710927,  2.53454580123,   2.56072409642),
    make_tuple(0.319718658101,   2.26274177495,  4.79846180765,   6.37076134603),
    make_tuple(2.13637963503,    2.97795232579,  1.5269788301,    1.92269310186),
    make_tuple(3.77606464791,    4.20913749896,  3.97782321996,   5.72051438859),
    make_tuple(2.79836123619,    3.768563598,    2.09402471666,   3.46627143316),
    make_tuple(3.48611282385,    3.67849820676,  4.7366447839,    5.37005720729),
    make_tuple(1.2782639529,     13.5812681759,  1.7323171009,    4.46988133492),
    make_tuple(4.99413709604,    12.7618655006,  0.254535335591,  4.18537818428),
    make_tuple(0.00702957199101, 2.60674598977,  3.98011866322,   7.52329694114),
    make_tuple(3.11526198734,    11.6344410117,  0.495963816032,  18.4984107423),
    make_tuple(3.76593394394,    4.2970565309,   3.38761753273,   3.592348625),
    make_tuple(3.26351146167,    24.7943305097,  3.8794030723,    72.6563045625),
    make_tuple(4.51773255156,    5.6314042043,   0.516604422414,  1.55032342476),
    make_tuple(4.84462815597,    5.71285728638,  1.18852982042,   1.76148767083),
    make_tuple(3.06627167996,    11.8274793993,  2.83436222821,   6.19795827617),
    make_tuple(2.45744908068,    5.23229158933,  3.72412011398,   7.98113622289),
    make_tuple(1.40672602751,    1.50277921117,  0.142300732739,  0.149257529884),
    make_tuple(4.88673050342,    6.5092134417,   1.80371553782,   10.9180642135)
  }; // end of normal_adder_data
  
  vector<tuple<double, double, double, double, double, double, double, double, double, double, double, double, double>> scale_upper_limit_data {
    //        Fs1              Es1              Fm1             Fs2              Es2              Fm2              Fs3              Es3               Fm3               Fs4              Es4               Fm4              Expected
    make_tuple(4.91564722506,  0.184269869878,  0.26909738152,  3.83757139739,   0.883622098259,  0.556089594356,  2.80565853954,   0.803651292938,   2.43429426785,    2.96464652171,   0.249179494657,   1.69831621713,   1.6478),
    make_tuple(0.882428145177, 0.736068486912,  1.49946869943,  1.28486012986,   0.414467244917,  3.30764759509,   3.42095384185,   0.339151526008,   4.11367867154,    1.08757380314,   0.42815607485,    4.06459561235,   0.55135),
    make_tuple(0.594641600608, 0.388685738509,  1.05641025027,  4.70625740901,   0.201818952634,  2.21784568917,   2.62096677015,   0.731873350858,   4.23943246117,    2.12862639363,   0.335856059719,   3.63452339113,   0.57805),
    make_tuple(1.69728517491,  0.283414222577,  4.31459578548,  1.2551555775,    0.724133089911,  3.90574291459,   0.427836373144,  0.268013712557,   2.94168213945,    1.24321923135,   0.247046194793,   1.74116461739,   0.28154),
    make_tuple(3.48540986677,  0.856811487957,  0.478919153952, 2.43497125498,   0.41749154665,   4.14856844132,   1.54138850005,   0.115331081162,   3.01389220231,    1.69392611642,   0.560006255315,   1.37554880788,   0.51208),
    make_tuple(0.643964102372, 0.73595865353,   0.579863748207, 0.839427434264,  0.563525423272,  3.82599815558,   3.08460651189,   0.862183939657,   4.40971617991,    3.6994042954,    0.665266128261,   3.79322609601,   0.54718),
    make_tuple(0.998597971491, 0.615319722596,  4.2835022084,   1.25235914977,   0.383110565803,  0.728291807756,  4.40573691271,   0.55703998586,    3.93254386342,    0.910986121279,  0.659867136347,   1.977638231,     0.64442),
    make_tuple(1.86385752251,  0.0223753431933, 4.35184297089,  2.41546438574,   0.424689559567,  2.5234359152,    3.88713433095,   0.712620735638,   0.19490504987,    2.79747933775,   0.232182576708,   3.17927472712,   0.42507),
    make_tuple(1.64450397475,  0.148060814963,  3.74501414877,  0.852319416815,  0.174574817069,  3.81133718733,   0.72848254075,   0.197119784906,   3.43715696623,    4.81331460722,   0.302301143352,   0.214098326772,  0.20694),
    make_tuple(2.51051712104,  0.764362700922,  2.44529966326,  0.23023600394,   0.311537018226,  0.521246570571,  4.36745456273,   0.546983519829,   2.35739539938,    1.34787230895,   0.329092190694,   4.2381902309,    0.46372),
    make_tuple(2.46960120812,  0.257698853512,  0.949715628296, 3.12384678756,   0.332949528313,  2.01040609863,   2.62047861089,   0.285631381845,   2.21191815143,    1.84628029281,   0.671590489988,   4.92056848023,   0.80236),
    make_tuple(3.90898056745,  0.308953042711,  3.11068676646,  1.74787850983,   0.292334331712,  3.60702403042,   2.85274910752,   0.682423529836,   4.17297977083,    1.88676417223,   0.314647510658,   4.90856309908,   0.41021),
    make_tuple(0.930559812004, 0.590057488549,  2.14046772634,  2.78085211124,   0.0921277773451, 3.5132549363,    4.08370286638,   0.736446555435,   3.94018414668,    4.4736699573,    0.190702241191,   1.43611266701,   0.86992),
    make_tuple(0.61055747535,  0.862959484604,  2.75051160925,  0.266590853122,  0.271095365241,  3.21447107424,   2.56431622368,   0.417884151008,   2.10450993625,    2.55879161393,   0.717844898365,   4.26869396251,   0.28234),
    make_tuple(1.38226545047,  0.0946245182923, 4.38158001236,  1.82092689239,   0.207344539013,  0.867127378004,  0.175268201493,  0.364766877863,   2.19041638183,    4.8923582227,    0.537620431985,   3.25297816609,   0.31412),
    make_tuple(2.99730077544,  0.248364006244,  4.18195106408,  0.757430028096,  0.340301025164,  2.79756778242,   0.040275801895,  0.211871514865,   1.91160729111,    4.42267133991,   0.757857930495,   3.23706000481,   0.22129),
    make_tuple(3.53774530023,  0.77803808286,   1.726079956,    1.84312504478,   0.459709698111,  1.03499690799,   4.06330783523,   0.833001749504,   1.78142340645,    2.05525657484,   0.845941966699,   4.69737650916,   0.67425),
    make_tuple(2.55481783183,  0.654010495146,  2.21329439868,  2.21055995319,   0.187699287077,  1.22606149969,   0.839678626085,  0.737880895508,   2.27222333096,    1.00729677553,   0.126127545729,   4.89028163228,   0.207),
    make_tuple(2.66081871486,  0.791412730078,  4.0144975837,   2.5842589199,    0.57072330531,   0.69334508656,   1.36952283926,   0.279847154048,   4.13915932988,    2.97715921968,   0.0109846705853,  3.81017723449,   0.7805),
    make_tuple(2.50289887767,  0.171635925183,  4.19152309795,  2.85799098859,   0.99350600121,   1.21101451561,   4.18851295617,   0.545361217348,   3.09843927122,    0.680342964468,  0.599032532921,   2.05059345332,   0.60113),
    make_tuple(3.10994652978,  0.827314594539,  2.28277507718,  0.267216075081,  0.897852704834,  0.269526530691,  2.47825358172,   0.957362282326,   1.20411215444,    1.32888189993,   0.296000676273,   4.8568608636,    0.28324),
    make_tuple(2.4349405629,   0.759907204488,  4.18599523873,  1.56340784483,   0.291047560245,  1.10147904287,   0.578266473913,  0.0364867207655,  0.284549667682,   0.489654870123,  0.00446529985576, 0.995856685636,  0.49352),
    make_tuple(1.59840142566,  0.112355351903,  0.941025005699, 3.51882889321,   0.191264026945,  4.3567454474,    3.36116506781,   0.339726277902,   0.727217526898,   1.01848707516,   0.34138824642,    0.720612346317,  0.81345),
    make_tuple(2.78309694943,  0.228224304155,  4.73980271263,  4.97707833432,   0.272684833075,  2.98900565191,   1.01376723413,   0.755619280865,   1.80919159798,    1.35895298158,   0.535210642849,   2.28174376455,   0.50443),
    make_tuple(3.31822618799,  0.288241318652,  4.50165208059,  4.84783475962,   0.204878935934,  3.39259254116,   0.668128366309,  0.482530569773,   1.22846403497,    3.42274582029,   0.498897497205,   2.52329149265,   0.74822),
    make_tuple(2.42120326808,  0.743351715519,  4.68532470276,  2.60668712228,   0.510028576625,  1.46518095698,   3.69420592814,   0.995465171134,   2.26641074355,    4.77162023961,   0.18062718963,    0.942593606793,  1.8454),
    make_tuple(2.72967301104,  0.674851052174,  4.55629906625,  4.55065283828,   0.966340678,     0.0221611424182, 0.907316222666,  0.99083444651,    2.63070539755,    1.04042200815,   0.355688059053,   2.91380261262,   0.34698),
    make_tuple(1.51330757475,  0.471376724236,  3.6733295584,   1.80060144173,   0.79333306232,   1.31207342327,   3.78907872143,   0.930721725724,   4.91676014656,    3.45414793036,   0.107302039653,   3.61862699638,   0.92151),
    make_tuple(1.34208318417,  0.730246997077,  2.13543902686,  3.15144516518,   0.36364139657,   1.64655716727,   0.606998818047,  0.304165856589,   0.458746140576,   1.58288163978,   0.277381326447,   0.580951026251,  1.26006),
    make_tuple(2.49230737384,  0.329420613214,  4.83690685192,  4.8942407109,    0.267423715859,  2.87696866035,   2.57861955407,   0.271244831111,   2.98448199029,    1.68732808833,   0.896429664021,   1.80157731015,   0.62607),
    make_tuple(3.16940882592,  0.455103952974,  1.12819591917,  1.90788252407,   0.317173487588,  0.786388029327,  1.36494934569,   0.732527314004,   4.14269414012,    0.932811550241,  0.0171875448369,  1.82745953151,   0.50993),
    make_tuple(3.08737553102,  0.211261714975,  3.50325807942,  0.792469984916,  0.695164520015,  1.76467923254,   1.93565323744,   0.0786188968693,  0.167294041027,   2.78813258488,   0.376845961786,   1.74660196438,   1.0607),
    make_tuple(3.21186287317,  0.766644589956,  4.815847772,    2.97835859735,   0.952285377146,  2.2336270656,    0.643843862253,  0.235919808681,   4.98330458107,    1.99314792059,   0.887007134602,   1.23710426093,   0.13557),
    make_tuple(1.67305205857,  0.310363782499,  0.104278381605, 3.38644994861,   0.972306900704,  3.13984127429,   4.39614128945,   0.811387567054,   0.539294824841,   3.13983834622,   0.382901518578,   1.80404854105,   1.57603),
    make_tuple(1.94371272051,  0.858760837654,  1.18403652797,  4.33052002188,   0.378574107037,  3.95044986766,   2.42699067534,   0.179184095295,   2.6202470319,     3.37130223168,   0.783338823748,   1.75952628681,   0.94169),
    make_tuple(1.51179558409,  0.389521131973,  0.524602942804, 4.15246209647,   0.668745978608,  2.65444835417,   3.18497637418,   0.811435483647,   4.46020062875,    1.64395813331,   0.348231777619,   4.95971141468,   0.38106),
    make_tuple(3.92829084555,  0.112983842737,  3.21705221703,  2.06454347076,   0.912086962286,  2.16643446457,   4.93055118643,   0.4485662932,     2.0501604224,     4.33219239757,   0.827780601343,   3.72383965186,   1.21726),
    make_tuple(2.32201018397,  0.124735398032,  3.0984824114,   4.49064498679,   0.828632301513,  2.41829441029,   1.22664809722,   0.397423839173,   1.11153269577,    1.10267072734,   0.743118190795,   0.968213972061,  0.69255),
    make_tuple(3.26468910059,  0.805102641812,  1.66143251863,  2.47885083317,   0.195012806088,  0.610854568037,  4.19934539652,   0.209495645548,   2.83941941295,    1.62030644165,   0.512607016633,   2.08310240413,   1.41861),
    make_tuple(0.915341949418, 0.208102680602,  1.69825224239,  0.712997228478,  0.73611156618,   2.23059306792,   3.8468736654,    0.0544416045275,  1.63011021894,    1.63739625763,   0.197331877686,   1.77583260396,   1.56518),
    make_tuple(0.562966116714, 0.433398454993,  4.64057797607,  4.52228750629,   0.329805306185,  0.87975072022,   0.964870007207,  0.583680023027,   0.383344434281,   4.68172909023,   0.37597728101,    2.58231373334,   0.60764),
    make_tuple(2.73532695985,  0.444200163641,  1.21550498862,  3.13883325353,   0.62632257399,   4.48453007856,   4.51396710211,   0.0180366225126,  4.95051503173,    1.33555590525,   0.242932781029,   1.84842956517,   0.91149),
    make_tuple(4.87941655623,  0.368504968641,  1.05854111345,  2.0589342445,    0.75574965365,   0.641819170799,  3.60589357009,   0.714154053151,   1.37315909945,    0.406979349805,  0.696594834183,   2.05014927898,   0.92041),
    make_tuple(4.0383275057,   0.590507815295,  2.93439263101,  3.63257453148,   0.182922846713,  3.29697247168,   3.17251429716,   0.656881219469,   3.70597687604,    1.32483686703,   0.0539406515664,  1.4882752861,    0.88867),
    make_tuple(1.80971126129,  0.887222039526,  4.51907350214,  3.72182167121,   0.986703330134,  3.65090452585,   4.90747652103,   0.45038262198,    1.38646407113,    0.766011300418,  0.194703996844,   4.28689575257,   0.23938),
    make_tuple(0.495414089096, 0.555778043391,  0.699970845202, 3.21633894605,   0.340361215346,  0.0406048635399, 4.02221162425,   0.344888445171,   2.0154318097,     3.08888742487,   0.654429793459,   1.79644204887,   1.88756),
    make_tuple(4.89157587608,  0.392288661474,  1.56431706729,  3.69659297082,   0.39108208351,   3.63713312127,   0.495884765768,  0.816065780074,   3.07095141535,    3.17404357445,   0.872586585435,   4.33673606902,   0.52404),
    make_tuple(3.68759201003,  0.138772336186,  0.72925167676,  1.24011615089,   0.606914265365,  4.56424654717,   3.37308371709,   0.938606288106,   2.01089326648,    0.208975388149,  0.481663358478,   4.0985225878,    0.12375),
    make_tuple(0.294645896693, 0.450861957359,  2.71681691186,  0.181704624328,  0.759392507334,  3.2358332801,    3.31427990701,   0.812496990732,   3.26932821939,    4.17681148154,   0.295083736561,   4.46948438662,   0.77724),
    make_tuple(4.61549042774,  0.439989719937,  3.12399047082,  4.17278215918,   0.930800985501,  2.85494835812,   2.64008162495,   0.222657632955,   3.64121639122,    4.9504670684,    0.401105469877,   1.12729231043,   0.82954),
    make_tuple(2.97137171736,  0.462788601592,  2.4580055845,   2.80987590937,   0.365965948562,  2.02070905896,   3.80452244812,   0.649329241636,   1.8009897423,     0.634631127451,  0.0481758469284,  2.34561799192,   0.27652),
    make_tuple(3.22461615069,  0.118627239294,  4.33261819014,  3.99758810199,   0.773478259807,  1.89088489502,   1.03203035434,   0.606935114933,   0.997130917355,   3.36070933043,   0.423653140718,   2.35605342643,   0.73556),
    make_tuple(3.49797270614,  0.754219801567,  2.57163597992,  2.6392040607,    0.553288168631,  2.08040980519,   1.47410706341,   0.937655830466,   1.41985732874,    3.9214851573,    0.985518946427,   2.48795524666,   1.1049),
    make_tuple(3.65825482252,  0.936517476758,  0.671806511996, 0.0116623572267, 0.685529925121,  3.92968779002,   2.72634660502,   0.837732168367,   0.940734476813,   1.41749890549,   0.302112986165,   0.0530583407737, 0.0),
    make_tuple(3.23308496521,  0.413851164222,  0.919065858275, 3.08620242534,   0.387581955213,  0.116165545434,  1.49906251037,   0.574575402602,   1.52577341323,    4.16478761365,   0.316244394101,   2.18383537018,   1.78798),
    make_tuple(3.28436439751,  0.0639934411411, 1.65719645318,  2.22117085534,   0.537884922603,  0.248858369299,  2.65919882042,   0.366981686633,   2.7231528275,     2.8677166714,    0.695230456846,   2.41988840186,   1.01412),
    make_tuple(3.96327398311,  0.408703864726,  2.81535562211,  2.26055028039,   0.079848044004,  3.32281471085,   0.0435725290958, 0.248384092119,   3.1753620599,     1.12924537879,   0.44673592636,    1.08522228084,   0.04951),
    make_tuple(2.54322293427,  0.992177769986,  3.35316924587,  3.65443713516,   0.690532884558,  4.79182079222,   0.546537690907,  0.985614316221,   0.867336674009,   3.1221077013,    0.783250615207,   1.00722375046,   0.63147),
    make_tuple(1.26272513544,  0.73071518264,   2.69701882202,  3.997477007,     0.0279953557421, 3.60955474201,   2.41059618247,   0.291406720765,   1.50348418238,    3.44655983174,   0.574093309854,   3.51848292647,   1.08283),
    make_tuple(0.858418705346, 0.532911711007,  4.6127644816,   4.81815184811,   0.383956316841,  3.5603769132,    1.06445037375,   0.111326356703,   0.00801445130935, 1.20726329001,   0.752634168771,   3.69661887974,   0.14493),
    make_tuple(2.22237061509,  0.425290407133,  4.50868821656,  3.48995444292,   0.335537863824,  2.03441283465,   3.08762921497,   0.574066168864,   1.81220284946,    2.54254018023,   0.540536021972,   3.09029036874,   0.60706),
    make_tuple(4.19707808497,  0.407419482339,  4.13710491355,  3.65264373056,   0.469235570065,  2.50200519135,   1.68635734979,   0.088760112934,   4.42157011126,    2.43913571609,   0.108880336498,   1.91184332941,   0.48024),
    make_tuple(2.56896370266,  0.449225294053,  4.5748238591,   0.184597393308,  0.582117052472,  4.09379170697,   3.56357622824,   0.476681048327,   3.36538492713,    0.737709584584,  0.237648978794,   2.60924382985,   0.39049),
    make_tuple(2.42582043404,  0.523850519529,  2.70632498346,  1.18589175294,   0.492409621046,  2.51375403704,   3.76115761369,   0.823309180013,   1.87910018944,    4.6834440948,    0.38733822846,    3.99693377084,   1.01381),
    make_tuple(2.85037851499,  0.10981046206,   4.28643560355,  2.07187675571,   0.250738976716,  4.21045107466,   1.57031678883,   0.975021062828,   2.43608672348,    1.44120981491,   0.45071804749,    4.06538969406,   0.3667),
    make_tuple(3.93270941793,  0.856031993038,  4.04373622112,  1.51159379955,   0.57212190415,   4.16732965684,   4.07466571005,   0.400502621408,   3.0866094192,     2.15800053494,   0.59444906909,    4.56366543613,   0.71303),
    make_tuple(1.98774419835,  0.65711730863,   0.476261032591, 1.4756871328,    0.567419663135,  3.18146219373,   4.00614071765,   0.0543681650848,  0.50941960606,    2.89035191262,   0.494888250091,   3.35895952119,   5.44594),
    make_tuple(4.09856038184,  0.976924550088,  4.977127784,    2.41684658722,   0.609169837534,  4.61482039015,   1.82402785482,   0.00456706021069, 2.85969355763,    2.97651837437,   0.522155449181,   1.59388565998,   0.63784),
    make_tuple(2.57925993406,  0.479783204797,  0.915842140431, 2.165100137,     0.171165978258,  0.876468660601,  2.08127293949,   0.736877258904,   3.52957433452,    2.48014174789,   0.814576398169,   1.10958982018,   0.71278),
    make_tuple(4.98422098815,  0.950932254755,  2.84733918931,  0.0277063990683, 0.461829666053,  3.12021473798,   0.543625362664,  0.447862559224,   2.76215789966,    0.892155592203,  0.410173027116,   0.391995863163,  0.06378),
    make_tuple(2.30997712152,  0.0503693601888, 1.34363391326,  1.3745657965,    0.668180133172,  3.05075500948,   1.37116894774,   0.708243058808,   4.42593358151,    2.74130395398,   0.53263892438,    3.48059081635,   0.50552),
    make_tuple(3.43813823009,  0.0200640816688, 0.573102947328, 1.62926876997,   0.463998300868,  1.9783959879,    0.829768036966,  0.200345471786,   4.54286300142,    3.35738372473,   0.752561969,      2.48542437802,   0.20682),
    make_tuple(0.676908006611, 0.012115498368,  3.71275900968,  3.20530060465,   0.935701886748,  2.03886897134,   1.45691357668,   0.981799114672,   4.71503861933,    0.350223792196,  0.863889633577,   2.23526596911,   0.17343),
    make_tuple(2.89326643665,  0.11775424729,   4.23003549982,  0.901725117073,  0.552355688347,  3.51152955346,   4.51300094452,   0.618776849567,   4.74621986119,    0.925397025981,  0.922369915658,   1.29530431261,   0.62837),
    make_tuple(0.657237254906, 0.88772644123,   4.8395751151,   2.87345100098,   0.444874674526,  1.46435866288,   0.718411810981,  0.986691223705,   2.35595355099,    1.65526762882,   0.233698793324,   1.49030104548,   0.64814),
    make_tuple(2.12607536557,  0.113704926647,  4.36849884771,  3.81779825147,   0.0840033167282, 2.66945494155,   0.678924839258,  0.0870922568944,  1.31409817477,    2.8559714329,    0.842689980807,   0.902754082985,  0.46648),
    make_tuple(1.85444857852,  0.948510498676,  0.654563451148, 4.55360405095,   0.41668453339,   3.69833934433,   2.42958465502,   0.187984779203,   2.42020843902,    0.553437460021,  0.47498771757,    2.8628329625,    0.8575),
    make_tuple(2.47083737877,  0.378316495647,  2.86794061322,  3.03440111594,   0.208534580744,  4.76202728813,   4.22137922275,   0.785431615705,   2.27975329435,    3.61209057422,   0.221870177008,   3.4625859683,    0.76586),
    make_tuple(1.07008791014,  0.350351187879,  1.44278645929,  4.78169136782,   0.19454155434,   1.7332715907,    0.0356061775674, 0.118568929903,   2.86119181555,    1.44899699146,   0.825365256733,   4.98259841947,   0.0288),
    make_tuple(0.818254106814, 0.875525717126,  3.18835849977,  0.69392783593,   0.720023223526,  1.19327996434,   1.29454535848,   0.85559527443,    2.75947712422,    3.7854665091,    0.408649265925,   4.0178175522,    0.80001),
    make_tuple(0.366774149722, 0.600041574326,  0.79624581427,  2.96177105817,   0.568302792258,  0.388426725426,  2.58455054645,   0.35994292439,    2.0741340138,     2.32994491391,   0.970469727669,   4.06705846429,   0.97969),
    make_tuple(1.28214752509,  0.308169643821,  0.469495370109, 1.84950360938,   0.0935934987953, 4.14789520263,   3.12342823673,   0.884414604763,   4.71806142755,    1.26457618564,   0.120336278211,   2.47863452708,   0.44475),
    make_tuple(3.63942843329,  0.2949955426,    0.757979096366, 2.11975935116,   0.0881836228816, 0.232328463565,  0.551908030536,  0.541461668623,   4.37075874727,    4.04433741888,   0.201140526977,   1.4091262143,    1.30508),
    make_tuple(1.22191136964,  0.553290430739,  4.07689677948,  0.767018681155,  0.54848379493,   0.519457597886,  3.38779275232,   0.29987349498,    4.83228138093,    4.14781829615,   0.153784422244,   1.77096148334,   1.13577),
    make_tuple(0.73943159698,  0.268405419438,  2.76342342186,  4.34243631515,   0.828336495374,  1.07444204697,   0.373519560424,  0.15933205081,    2.19573852828,    0.0370859778038, 0.753445769437,   3.74462106127,   0.14242),
    make_tuple(2.88660328607,  0.836036290011,  1.64009874536,  3.21757332798,   0.197721719808,  1.38505658449,   1.47089942346,   0.408967396111,   1.38011309737,    4.78008140492,   0.961398603661,   1.75441144171,   1.388),
    make_tuple(4.16045040617,  0.405810897098,  3.71920200873,  1.94242304655,   0.453182185458,  4.5995030331,    1.78002054568,   0.867577202636,   4.36373441511,    2.51829195285,   0.274704132682,   2.21752844842,   0.64243),
    make_tuple(0.178716582076, 0.434527839895,  4.27121847504,  4.87105165471,   0.0114505098432, 4.4811219465,    3.21250772565,   0.0826501967647,  3.26443375512,    2.78018319967,   0.0809058517408,  1.58263494146,   0.8938),
    make_tuple(2.88037448431,  0.304240398678,  1.61173801567,  2.92767561061,   0.934279326994,  3.9710838524,    0.724659399923,  0.608546341053,   2.13551813027,    2.10037292136,   0.572648375761,   2.61441992503,   0.5771),
    make_tuple(0.891492207337, 0.986036784191,  4.83278653291,  0.0259965229545, 0.984653172803,  3.59600353102,   0.680764930748,  0.708801062643,   2.84272210349,    1.49709735655,   0.701212937929,   2.55811412174,   0.14266),
    make_tuple(1.1590515666,   0.951953188195,  3.64934223981,  1.15768974019,   0.126703096013,  4.49501197725,   2.14705862704,   0.653287861662,   4.17237773978,    1.91998074084,   0.690487529141,   0.748816198598,  0.23287),
    make_tuple(1.56183456824,  0.294794644713,  3.33922372361,  0.686891434391,  0.352538968307,  1.73279015077,   3.38842398289,   0.972495526178,   4.33917174613,    2.77727473286,   0.355283790151,   3.03374608792,   0.58711),
    make_tuple(2.7533044052,   0.0293070756213, 1.53671155295,  2.11710392426,   0.61806341638,   4.98768609439,   0.586269200396,  0.627516940947,   2.07521372828,    2.57138457133,   0.449205817861,   1.60897018608,   0.52514),
    make_tuple(0.877295413678, 0.479325256342,  3.00601683535,  2.86261237889,   0.850322580025,  0.544829322926,  2.5321276179,    0.870231955618,   1.91614840911,    1.3987174856,    0.206860922676,   3.90568056945,   0.35272),
    make_tuple(3.57014971926,  0.0778764442376, 1.74275682138,  3.45236923481,   0.419568866649,  3.3687423848,    3.2100660833,    0.406047318984,   2.27718254214,    1.91194414878,   0.542857404133,   1.16824463967,   1.12867),
    make_tuple(1.44621148231,  0.916469699931,  0.371084479783, 0.0548619901078, 0.637242304983,  3.40476962318,   1.27222603773,   0.990536313045,   1.17751105936,    4.79819433624,   0.216949618845,   3.17569278773,   1.33017),
    make_tuple(0.549120818413, 0.902632743936,  2.53460124413,  0.961870199266,  0.694019187494,  4.50888846642,   1.3841751072,    0.506144799831,   4.79248229917,    1.98024001002,   0.752970104551,   4.87526906573,   0.2585),
    make_tuple(2.28069678092,  0.795784513183,  1.2000505264,   4.78595150499,   0.347237096269,  4.61559497874,   4.56513084412,   0.747914889284,   0.924877379505,   4.87309222454,   0.637022934794,   4.05966313336,   1.04773),
    make_tuple(3.6743352572,   0.600245165296,  3.96360617426,  0.960952493962,  0.0881265866781, 0.763668068549,  3.12276731033,   0.663492305992,   0.715630509044,   1.73557497535,   0.207508012933,   1.63554618296,   0.99979),
    make_tuple(0.44181852801,  0.517426088382,  1.83856710553,  0.0484680230513, 0.0856817174886, 2.92951495987,   3.07501955766,   0.394281073991,   4.8444929006,     4.50376494427,   0.549228059187,   1.45877281062,   0.09387)
  }; // end of scale_upper_limit_data
  
}; // end of ScaleFactorFunctor_Fixture

//-----------------------------------------------------------------------------

BOOST_AUTO_TEST_SUITE (ScaleFactorFunctor_test)

//-----------------------------------------------------------------------------
// Check the functor NormalFractionAdder
//-----------------------------------------------------------------------------
BOOST_FIXTURE_TEST_CASE(NormalFractionAdder_test, ScaleFactorFunctor_Fixture) {
  
  auto data_it = adder_test_data.begin();
  auto expected_it = normal_adder_data.begin();
  for (; data_it!=adder_test_data.end(); ++data_it, ++expected_it) {
    
    // Given
    double numerator = get<0>(*expected_it);
    double denominator = get<2>(*expected_it);
    SourceCatalog::FluxErrorPair source {get<0>(*data_it), get<1>(*data_it), false, false};
    SourceCatalog::FluxErrorPair model {get<2>(*data_it), 0., false, false};
    
    // When
    NormalFractionAdder adder {};
    adder(source, model, numerator, denominator);
    
    // Then
    BOOST_CHECK_CLOSE(numerator, get<1>(*expected_it), close_tolerance);
    BOOST_CHECK_CLOSE(denominator, get<3>(*expected_it), close_tolerance);
    
  }
  
}

//-----------------------------------------------------------------------------
// Check the functor MissingDataFractionAdder
//-----------------------------------------------------------------------------
BOOST_FIXTURE_TEST_CASE(MissingDataFractionAdder_test, ScaleFactorFunctor_Fixture) {
  
  auto data_it = adder_test_data.begin();
  auto expected_it = normal_adder_data.begin();
  for (; data_it!=adder_test_data.end(); ++data_it, ++expected_it) {
    
    // Given
    double numerator = get<0>(*expected_it);
    double denominator = get<2>(*expected_it);
    SourceCatalog::FluxErrorPair source {get<0>(*data_it), get<1>(*data_it), true, false};
    SourceCatalog::FluxErrorPair model {get<2>(*data_it), 0., false, false};
    
    // When
    MissingDataFractionAdder adder {};
    adder(source, model, numerator, denominator);
    
    // Then
    BOOST_CHECK_CLOSE(numerator, get<0>(*expected_it), close_tolerance);
    BOOST_CHECK_CLOSE(denominator, get<2>(*expected_it), close_tolerance);
    
    // Given
    source.missing_photometry_flag = false;
    
    // When
    adder(source, model, numerator, denominator);
    
    // Then
    BOOST_CHECK_CLOSE(numerator, get<1>(*expected_it), close_tolerance);
    BOOST_CHECK_CLOSE(denominator, get<3>(*expected_it), close_tolerance);
    
  }
  
}

//-----------------------------------------------------------------------------
// Check the functor ScaleFactorNormal
//-----------------------------------------------------------------------------
BOOST_AUTO_TEST_CASE(ScaleFactorNormal_test) {
  
  // Given
  vector<SourceCatalog::FluxErrorPair> source {
    {1., 0.1, false, false},
    {2., 0.2, false, false},
    {3., 0.3, false, false}
  };
  vector<SourceCatalog::FluxErrorPair> model {
    {.01, 0., false, false},
    {.02, 0., false, false},
    {.03, 0., false, false}
  };
  vector<double> num_add {1., 2., 3.};
  vector<double> den_add {4., 5., 6.};
  double expected = (1.+2.+3.) / (4.+5.+6.);
  
  // Expect
  mock_adder_singleton.reset(new MockAdder{});
  for (size_t i=0; i<source.size(); ++i) {
    EXPECT_CALL(*mock_adder_singleton, FunctorCall(source[i], model[i], _, _))
              .WillOnce(IncreaseNumeratorDenominator(num_add, den_add, i));
  }
  
  // When
  ScaleFactorNormal<TestAdder> functor {};
  auto result = functor(source.begin(), source.end(), model.begin());
  
  // Then
  BOOST_CHECK_EQUAL(result, expected);
  
  // The following will delete the mock object and report its tests
  mock_adder_singleton.reset(nullptr);
  
}

//-----------------------------------------------------------------------------
// Check the functor ScaleFactorUpperLimit
//-----------------------------------------------------------------------------
BOOST_FIXTURE_TEST_CASE(ScaleFactorUpperLimit_test, ScaleFactorFunctor_Fixture) {
  
  int count = 0;
  for (auto& data : scale_upper_limit_data) {
    
    // Given
    vector<SourceCatalog::FluxErrorPair> source {
      {get<0>(data), get<1>(data), false, false},
      {get<3>(data), get<4>(data), false, false},
      {get<6>(data), get<7>(data), false, false},
      {get<9>(data), get<10>(data), false, false}
    };
    vector<SourceCatalog::FluxErrorPair> model {
      {get<2>(data), 0., false, false},
      {get<5>(data), 0., false, false},
      {get<8>(data), 0., false, false},
      {get<11>(data), 0., false, false}
    };
    ScaleFactorUpperLimit<NormalFractionAdder, ChiSquareLikelihoodLogarithmUpperLimit> functor {};
    
    // When
    auto result = functor(source.begin(), source.end(), model.begin());
    
    // Then
    BOOST_CHECK_EQUAL(result, ScaleFactorNormal<NormalFractionAdder>{}(source.begin(), source.end(), model.begin()));
    
    // Given
    source[0].upper_limit_flag = true;
    source[1].upper_limit_flag = true;
    
    // When
    result = functor(source.begin(), source.end(), model.begin());
    
    // Then
    BOOST_CHECK_CLOSE_FRACTION(result, get<12>(data), 1E-3);
    count += 1;
    
  }
  
}

BOOST_AUTO_TEST_SUITE_END ()
