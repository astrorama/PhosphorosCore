/**
 * @file MaxMarginalizationFunctor.icpp
 * @date February 5, 2015
 * @author Nikolaos Apostolakos
 */

#include <algorithm>
#include "PhzLikelihood/LikelihoodPdf1DTraits.h"

namespace Euclid {
namespace PhzLikelihood {

template <int FinalAxis>
void MaxLikelihoodMarginalizationFunctor<FinalAxis>::operator()(PhzDataModel::RegionResults& results) const {

  // Get the posterior grid from the passed object
  auto& likelihood_grid = results.get<PhzDataModel::RegionResultType::LIKELIHOOD_GRID>();



  // Generate the result 1D PDF
  auto& pdf = results.set<LikelihoodPdf1DTraits<FinalAxis>::PdfRes>(likelihood_grid.getAxis<FinalAxis>());

  // Calculate the result as maximum of the rest axes
  for (auto iter = pdf.begin(); iter != pdf.end(); ++iter) {
    *iter = *std::max_element(
        likelihood_grid.begin().fixAxisByValue<FinalAxis>(iter.template axisValue<0>()),
        likelihood_grid.end());
  }

}

} // end of namespace PhzLikelihood
} // end of namespace Euclid
