/**
 * @file PhzLikelihood/SharedPriorAdapter.h
 * @date Nov 4, 2015
 * @author Florian Dubath
 */

#include <utility>

namespace Euclid {
namespace PhzLikelihood {

  template<typename Prior>
  template <typename... PriorArgs>
  SharedPriorAdapter<Prior> SharedPriorAdapter<Prior>::factory(PriorArgs&&... prior_args) {
    return std::make_shared<Prior>(std::forward<PriorArgs>(prior_args)...);
  }

  template<typename Prior>
  SharedPriorAdapter<Prior>::SharedPriorAdapter(std::shared_ptr<Prior> prior):m_prior{prior}{}

  template<typename Prior>
  void SharedPriorAdapter<Prior>::operator()(PhzDataModel::DoubleGrid& likelihoodGrid,
        const SourceCatalog::Photometry& sourcePhotometry,
        const PhzDataModel::PhotometryGrid& modelGrid,
        const PhzDataModel::ScaleFactordGrid& scaleFactorGrid) const{
    (*m_prior)(likelihoodGrid,sourcePhotometry,modelGrid,scaleFactorGrid);
  }


}
}


