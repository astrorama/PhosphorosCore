/*
 * Copyright (C) 2012-2020 Euclid Science Ground Segment    
 *  
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free 
 * Software Foundation; either version 3.0 of the License, or (at your option)  
 * any later version.  
 *  
 * This library is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  
 * details.  
 *  
 * You should have received a copy of the GNU Lesser General Public License 
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  
 */

/* 
 * @file AxisWeightPrior.icpp
 * @author nikoapos
 */

namespace Euclid {
namespace PhzLikelihood {

template <int AxisIndex>
AxisWeightPrior<AxisIndex>::AxisWeightPrior(std::map<XYDataset::QualifiedName, double> weight_map)
        : m_weight_map {std::move(weight_map)} {
}

template <int AxisIndex>
void AxisWeightPrior<AxisIndex>::operator()(PhzDataModel::DoubleGrid& likelihoodGrid,
                                            const SourceCatalog::Photometry&,
                                            const PhzDataModel::PhotometryGrid&,
                                            const PhzDataModel::DoubleGrid&) const {
  auto& axis = likelihoodGrid.getAxis<AxisIndex>();
  for (std::size_t i = 0; i < axis.size(); ++i) {
    auto prior = m_weight_map.at(axis[i]);
    for (auto& cell : likelihoodGrid.fixAxisByIndex<AxisIndex>(i)) {
      cell = cell * prior;
    }
  }
}

} /* namespace PhzLikelihood */
} /* namespace Euclid */