/** 
 * @file MaxMarginalizationFunctor.icpp
 * @date February 5, 2015
 * @author Nikolaos Apostolakos
 */

#include <algorithm>

namespace Euclid {
namespace PhzLikelihood {

template <int FinalAxis>
auto MaxMarginalizationFunctor<FinalAxis>::operator()(const PhzDataModel::DoubleGrid& likelihood_grid) const -> result_type {
  
  // Calculate the result as maximum of the rest axes
  result_type result {likelihood_grid.getAxis<FinalAxis>()};
  for (auto iter = result.begin(); iter != result.end(); ++iter) {
    *iter = *std::max_element(
          likelihood_grid.begin().fixAxisByValue<FinalAxis>(iter.template axisValue<0>()),
          likelihood_grid.end());
  }

  return result;
}

} // end of namespace PhzLikelihood
} // end of namespace Euclid
