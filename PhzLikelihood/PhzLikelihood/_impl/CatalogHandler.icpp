/** 
 * @file CatalogHandler.icpp
 * @date December 3, 2014
 * @author Nikolaos Apostolakos
 */

namespace Euclid {
namespace PhzLikelihood {

template<typename SourceIter>
void CatalogHandler::handleSources(SourceIter source_begin, SourceIter source_end,
                                   PhzOutput::OutputHandler& out_handler,
                                   ProgressListener progress_listener) const {

  size_t total_sources = source_end - source_begin;
  size_t progress = 0;
  if (progress_listener)
    progress_listener(progress, total_sources);
  for (SourceIter source=source_begin; source != source_end; ++source) {
    // Get the PHZ results
    auto phz_results = m_source_phz_func(*source);
    // Pass them to the handler
    out_handler.handleSourceOutput(*source, phz_results);
    if (progress_listener)
      progress_listener(++progress, total_sources);
  }
}

} // end of namespace PhzLikelihood
} // end of namespace Euclid
